---
import Layout from '/layouts/Layout.astro';
import ContractBoostCalculator from '/components/contract-boost-calculator';

const api = process.env.NEXT_PUBLIC_API_URL;
---

<Layout title="Contract Boost Calculator">
	<ContractBoostCalculator api={api} client:only="react" />
</Layout>

<style is:global>
	main {
		gap: 1rem;

		container-type: inline-size;
	}

	.calculatorInput {
		display: flex;
		flex-direction: inherit;
	}

	.calculatorCheckbox label {
		padding-left: 0.5em;
	}

	.artifactSelect {
		display: flex;
		flex-direction: column;
	}

	#inputs {
		display: grid;
		grid-template-columns: 16em auto;

		width: 100%;
		height: max-content;
	}

	#input-eid-artifacts {
		grid-column: 1;
		grid-row: 1 / span 2;

		display: flex;
		flex-direction: column;
		gap: 1rem;

		& .spacer {
			flex: 1;
		}
		& > div,
		& button {
			width: min(100%, 12em);
		}
	}

	#input-right {
		flex: 1;
		display: flex;
		flex-direction: column;
		gap: 1rem;

		min-width: 14.5em;

		& fieldset {
			display: flex;
			flex-direction: column;
			height: min-content;
			gap: 1rem;
			padding: 1em;

			& .input-stones {
				display: flex;
				flex-direction: column;
				gap: 0.5rem;
				& div {
					display: flex;
					flex-direction: row;
					gap: 0.5em;
					width: fit-content;
					align-items: center;
				}
				& label {
					width: max-content;
				}
			}
		}
	}

	#fetch-state {
		font-size: 70%;
		& span {
			margin-right: 0.5em;
		}
	}

	.spinner {
		display: inline-block;
		width: calc(1em / 1.414213);
		height: calc(1em / 1.414213);
		border-radius: 50%;
		border-top: 2px solid black;
		border-right: 2px solid transparent;
		box-sizing: border-box;
		animation: rotation 1s linear infinite;
	}

	@keyframes rotation {
		0% {
			transform: rotate(0deg);
		}
		100% {
			transform: rotate(360deg);
		}
	}

	.safariGridContainer {
		display: grid;
	}
	#boostSets {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(min(15em, 100%), 1fr));
		gap: 1rem;

		& div {
			display: flex;
			flex-direction: row;
			gap: 0.5em;
			width: fit-content;
			background-color: red;
		}
		& label {
			width: max-content;
		}
	}

	#output {
		font-size: 120%;

		display: grid;
		grid-template-columns: max-content max-content;
		column-gap: 1rem;

		& :nth-child(odd) {
			justify-self: end;
		}

		& :nth-child(even) {
			justify-self: start;
		}

		& img {
			height: 1em;
		}
	}

	.error {
		color: red;
	}

	#show-extra {
		width: 100%;
		& + div {
			font-size: small;
			opacity: 0.7;
		}
	}

	#extra-inputs {
		grid-column: 1 / span 2;
		margin-top: 1rem;
		display: flex;
		flex-direction: column;
		gap: 0.5em;
		align-items: start;
		& div {
			display: flex;
			flex-direction: row;
			gap: 0.5em;
			align-items: center;
			& span {
				font-size: small;
				opacity: 0.7;
			}
		}
		& button {
			font-size: small;
			margin-top: 1em;
		}
	}

	#container-colleggtibleIhr::after {
		content: '%';
		margin-left: -0.5em;
		color: #888;
	}

	@container (min-width: 42em) {
		#input-right fieldset .input-stones {
			flex-direction: row;
		}

		#extra-inputs {
			grid-column: 2;
		}
	}

	@container (max-width: 32em) {
		#inputs {
			display: flex;
			flex-direction: column;
			gap: 1rem;
		}
	}
</style>
